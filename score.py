import re
def score(string):
    x = list(string)
    count_open = 0
    count_close = 0
    result = 0
    for i in range(len(x)):
        if x[i] == '(':
            count_open += 1
        elif x[i] == ')':
            count_close += 1
        else:
            continue

        result = max(result, (count_open - count_close))
    return result

def left_join(string1, string2):
    x = list(string1)
    y = list(string2)

    result = list(y[0]) + x  + y[1:]
    #print(result)
    return ''.join(result)


def right_join(string1, string2):
    x = list(string1)
    y = list(string2)

    result = x[:-1] + y + list(x[-1])
    return ''.join(result)


def find_answer(string):
    lis = string.split('+')
    #print(score(lis[0]), score(lis[1]), score(lis[2]))
    while len(lis) != 1:
        if score(lis[0]) > score(lis[1]):
            lis = [right_join(lis[0], lis[1])] + lis[2:]

        elif score(lis[0]) < score(lis[1]):
            lis = [left_join(lis[0], lis[1])] + lis[2:]

        else:
            lis = [lis[0] + lis[1]] + lis[2:]

    return lis[0]

x
#x = list(x)
x = re.sub(' ','', x)

#print(x)
#print(x)
print(find_answer(x))
